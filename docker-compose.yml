# version: '3.7'

# services:
#   backend:
#     container_name: backend
#     restart: unless-stopped
#     build: ./backend
#     ports:
#       - '4000:4000'
#     # env_file: ./backend/config/config.env
#     environment:
#       - NODE_ENV=production
#     networks:
#       - internal

#   frontend:
#     container_name: frontend
#     restart: unless-stopped
#     build: ./frontend
#     environment:
#       - NODE_PATH=/app/src
#     ports:
#       - '80:80'
#     depends_on:
#       - backend
#     networks:
#       - internal

#   # db:
#   #   container_name: mongodb
#   #   image: mongo
#   #   restart: unless-stopped
#   #   environment:
#   #     MONGO_INITDB_DATABASE: ecommerce
#   #   ports:
#   #     - '27017:27017'
#   #   volumes:
#   #     - mongo_data:/data/db
#   #     - mongo_config:/data/configdb
#   #   networks:
#   #     - internal

# networks:
#   internal:

# # volumes:
# #   mongo_data: {}
# #   mongo_config: {}

# #  build docker
# version: '3'

# services:
#   backend:
#     env_file:
#         "./backend/config/config.env"
#     build:
#       context: ./backend
#       dockerfile: ./Dockerfile
#     image: "thuong0201/ecommerce-backend"
#     ports:
#       - "4000:4000"
#   frontend:
#     build:
#       context: ./frontend
#       dockerfile: ./Dockerfile
#     image: "thuong0201/ecommerce-frontend"
#     ports:
#       - "3000:3000"
#     links:
#       - "backend"


# pull docker nhận từ docker hub
version: '3'

services:
  backend:
    image: "thuong0201/ecommerce-backend"
    ports:
      - "4000:4000"
  frontend:
    image: "thuong0201/ecommerce-frontend"
    ports:
      - "3000:3000"
    links:
      - "backend"